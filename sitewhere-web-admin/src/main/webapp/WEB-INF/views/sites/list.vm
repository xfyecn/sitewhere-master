<!-- #set ($sitewhere_title = "Manage Sites") -->
<!-- #set ($sitewhere_section ="sites") -->
<!-- #set ($use_map_includes = "true") -->
#parse ("includes/top.inc")

<style>
.sw-site-list {
	border: 0px;
}

.command-buttons {
	text-align: center;
}

#metadataGrid {
	margin-top: 15px;
	margin-bottom: 15px;
}
</style>

#parse ("sites/siteCreateDialog.inc")

<!-- Title Bar -->
<div class="sw-title-bar content k-header">
	<h1 class="ellipsis" data-i18n="sites.list.title"></h1>
	<div class="sw-title-bar-right">
		<a id="btn-filter-results" class="btn" href="javascript:void(0)">
			<i class="fa fa-filter sw-button-icon"></i> <span
			data-i18n="public.FilterResults">Filter Results</span>
		</a> <a id="btn-add-site" class="btn" href="javascript:void(0)"> <i
			class="fa fa-plus sw-button-icon"></i> <span
			data-i18n="sites.list.AddNewSite">Add Site</span>
		</a>
	</div>
</div>
<div id="sites" class="sw-site-list"></div>
<div id="pager" class="k-pager-wrap"></div>

<form id="view-site-detail" method="get"></form>

#include ("sites/templateSiteEntry.inc")

<script>
	/** Set sitewhere_title */
	sitewhere_i18next.sitewhere_title = "sites.list.title";

	/** Sites datasource */
	var sitesDS;

	/** Called when edit button is clicked */
	function onSiteEditClicked(e, siteToken) {
		var event = e || window.event;
		event.stopPropagation();
		suOpen(siteToken, onEditSuccess);
	}

	/** Called on successful edit */
	function onEditSuccess() {
		sitesDS.read();
	}

	/** Called when delete button is clicked */
	function onSiteDeleteClicked(e, siteToken) {
		var event = e || window.event;
		event.stopPropagation();
		swConfirm(i18next("public.DeleteSite"), i18next("sites.list.AYSDTS") + "?", function(result) {
			if (result) {
				$.deleteAuthJSON("${request.contextPath}/api/sites/" + siteToken + "?force=true", "${basicAuth}",
						"${tenant.authenticationToken}", onDeleteSuccess, onDeleteFail);
			}
		});
	}

	/** Called on successful delete */
	function onDeleteSuccess() {
		sitesDS.read();
	}

	/** Handle failed delete call */
	function onDeleteFail(jqXHR, textStatus, errorThrown) {
		handleError(jqXHR, i18next("sites.list.UTDS"));
	}

	/** Called when open button is clicked */
	function onSiteOpenClicked(e, siteToken) {
		var event = e || window.event;
		event.stopPropagation();
		$("#view-site-detail").attr("action", "${request.contextPath}/admin/${tenant.id}/sites/" + siteToken + ".html");
		$('#view-site-detail').submit();
	}

	/** Called after a new site has been created */
	function onSiteCreated() {
		sitesDS.read();
	}

	$(document).ready(function() {
		/** Create AJAX datasource for sites list */
		sitesDS = new kendo.data.DataSource({
			transport : {
				read : {
					url : "${request.contextPath}/api/sites",
					beforeSend : function(req) {
						req.setRequestHeader('Authorization', "Basic ${basicAuth}");
						req.setRequestHeader('X-SiteWhere-Tenant', "${tenant.authenticationToken}");
					},
					dataType : "json",
				}
			},
			schema : {
				data : "results",
				total : "numResults",
				parse : function(response) {
					$.each(response.results, function(index, item) {
						parseSiteData(item);
					});
					return response;
				}
			},
			serverPaging : true,
			serverSorting : true,
			pageSize : 10
		});

		/** Create the site list */
		$("#sites").kendoListView({
			dataSource : sitesDS,
			template : kendo.template($("#tpl-site-entry").html())
		});

		$("#pager").kendoPager({
			dataSource : sitesDS
		});

		/** Handle add site functionality */
		$('#btn-add-site').click(function(event) {
			scOpen(event, onSiteCreated);
		});
	});
</script>

#parse ("includes/bottom.inc")
