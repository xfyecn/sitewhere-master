<!-- #set ($sitewhere_title = "Manage Users") -->
<!-- #set ($sitewhere_section = "users") -->
#parse ("includes/top.inc")

<style>
</style>

<!-- Title Bar -->
<div class="sw-title-bar content k-header">
	<h1 class="ellipsis" data-i18n="users.list.title"></h1>
	<div class="sw-title-bar-right">
		<a id="btn-filter-results" class="btn" href="javascript:void(0)">
			<i class="fa fa-filter sw-button-icon"></i> <span
			data-i18n="public.FilterResults">Filter Results</span>
		</a> <a id="btn-add-user" class="btn" href="javascript:void(0)"> <i
			class="fa fa-plus sw-button-icon"></i> <span
			data-i18n="users.list.AddNewUser">Add New User</span>
		</a>
	</div>
</div>

<!-- -->
#parse ("users/usersTable.inc")
<!-- -->
#parse ("users/templateUserEntry.inc")
<!-- -->
#parse ("users/userCreateDialog.inc")

<script>
	/** Set sitewhere_title */
	sitewhere_i18next.sitewhere_title = "users.list.title";

	/** Reference for user list datasource */
	var usersDS;

	/** Called after a new user has been created */
	function onUserCreated() {
		usersDS.read();
	}

	/** Edit an existing user */
	function onEditUser(e, username) {
		var event = e || window.event;
		event.stopPropagation();
		uuOpen(username, onUserEdited);
	}

	/** Called after successful user edit */
	function onUserEdited() {
		usersDS.read();
	}

	/** Called when delete button is clicked */
	function onDeleteUser(e, username) {
		var event = e || window.event;
		event.stopPropagation();
		swConfirm(i18next("public.DeleteUser"), i18next("users.list.AYSYWTDTU"), function(result) {
			if (result) {
				$.deleteAuthJSON("${request.contextPath}/api/users/" + username + "?force=true", "${basicAuth}",
						"${tenant.authenticationToken}", onDeleteSuccess, onDeleteFail);
			}
		});
	}

	/** Called on successful delete */
	function onDeleteSuccess() {
		usersDS.read();
	}

	/** Handle failed delete call */
	function onDeleteFail(jqXHR, textStatus, errorThrown) {
		handleError(jqXHR, i18next("users.list.UTDU"));
	}

	$(document).ready(function() {
		/** Create AJAX datasource for users list */
		usersDS = new kendo.data.DataSource({
			transport : {
				read : {
					url : "${request.contextPath}/api/users",
					beforeSend : function(req) {
						req.setRequestHeader('Authorization', "Basic ${basicAuth}");
						req.setRequestHeader('X-SiteWhere-Tenant', "${tenant.authenticationToken}");
					},
					dataType : "json",
				}
			},
			schema : {
				data : "results",
				total : "numResults",
				parse : function(response) {
					$.each(response.results, function(index, item) {
						parseUserData(item);
					});
					return response;
				}
			},
			pageSize : 10
		});

		/** Create the location list */
		$("#users").kendoGrid({
			dataSource : usersDS,
			rowTemplate : kendo.template($("#tpl-user-entry").html()),
			scrollable : false,
		});

		/** Pager for device list */
		$("#pager").kendoPager({
			dataSource : usersDS
		});

		/** Handle create dialog */
		$('#btn-add-user').click(function(event) {
			ucOpen(onUserCreated);
		});
	});
</script>

#parse ("includes/bottom.inc")
